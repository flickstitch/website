# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://jashkenas.github.com/coffee-script/

jQuery ->
  # video page globals
  vote_off_png = "<%= asset_path('vote_off.png') %>"
  vote_on_png = "<%= asset_path('vote_on.png') %>"


  # prevents postback when click events are disabled
  $('.votes a:first').removeAttr('href')


  # manually construct href so we can add/remove it
  # via jquery
  setup_vote_click = -> 
    $('.votes a:first').one "click", (e) ->
      toggle_vote_image($(this).find('img'))
      update_vote_count($(this).find('img'))

      video_id = this.getAttribute('data-vote-id')
      vote_on = this.getAttribute('data-vote-on')
      link = "/videos/#{video_id}"
      if vote_on == "true"
        link = link + "/vote_down"
      else
        link = link + "/vote_up"
      $(this).attr('href', link)
      e.preventDefault()


  setup_vote_click()


  # check to see if vote image is on or off (on = blue; off = grey)
  vote_image_on = (vote_img) ->
    if vote_img.attr('src').indexOf(vote_on_png) > -1
      return true
    else
      return false

  set_vote_image = (vote_img, onoff) ->
    if onoff == "on"
      vote_img.attr('src', vote_on_png)
    else
      vote_img.attr('src', vote_off_png)

  set_vote_count = (vote_count_div, vote_count) ->
    vote_count_div.html(vote_count)


  $('.votes a:first').bind 'ajax:beforeSend', -> 
    $(this).removeAttr('href')


  # update href on vote link; doesn't matter if success or failure so use "complete" status
  $('.votes a:first').bind 'ajax:complete', (e, data, textStatus, jqXHR) -> 
    # sync score/vote image with what's on server now
    voteJson = $.parseJSON(data.responseText)
    if voteJson.vote_on
      $(this).attr('data-vote-on', 'true')
    else
      $(this).attr('data-vote-on', 'false')
    # once complete turn events back on
    setup_vote_click()


  # toggle thumbs up image between grey and blue
  # the toggle happens immediately (even before database is updated)
  toggle_vote_image = (vote_img) ->
    if vote_image_on(vote_img)
      toggle_image = vote_off_png
    else
      toggle_image = vote_on_png
    vote_img.attr('src', toggle_image)


  toggle_vote_href = (href_tag) ->
    original_href = href_tag.attr('href')
    if original_href.indexOf('vote_up') > -1
      new_href = original_href.replace /_up/, '_down'
    else
      new_href = original_href.replace /_down/, '_up'
    href_tag.attr('href', new_href)


  update_vote_count = (vote_img) ->
    vote_count_div = vote_img.closest('.votes').children('.vote-count')
    vote_count = parseInt(vote_count_div.text())
    if vote_image_on(vote_img)
      vote_count = vote_count + 1
    else
      vote_count = vote_count - 1
    vote_count_div.html(vote_count)


  # show alert to users that try to vote while not logged in
  $('.cannot-vote').click ->
    alert('You must sign in or register to vote!')


  # show comments as they are added
  $('#comment_form').bind 'ajax:complete', (e, data, textStatus, jqHXR) ->
    # clear the comment box
    $('#comment').val('')
    commentJson = $.parseJSON(data.responseText)
    $("<div id='comment_#{commentJson.id}'>" + commentJson.text + '</div><hr />').hide().prependTo('#comments').fadeIn()
